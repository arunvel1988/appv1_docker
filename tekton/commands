1)

create three clusters mgmt,test


2)

./create-multiple-cluster.sh

or

kind create cluster --config prod.yaml --name prod

3)

kubectl cluster-info --context kind-mgmt

kubectl cluster-info --context kind-qa


4)

kind get clusters


5)

kubectl get nodes

6)

install argocd

kubectl create ns argocd

kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml -n argocd

kubectl get pods -n argocd 

kubectl port-forward svc/argocd-server 8080:80 -n argocd

kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d

kind export kubeconfig --name mgmt

kind export kubeconfig --name qa


7)

add qa cluster to argo cd

argocd login localhost:8080

argocd cluster add kind-qa

kubectl get secrets | grep kubeconfig




8)

install tekton on mgmt cluster


kubectl apply --filename https://storage.googleapis.com/tekton-releases/pipeline/latest/release.yaml

kubectl get ns

kubectl get pods -n tekton-pipelines -w

9)

create ci - part in tekton

install git-clone task for public repo

docker-build-push task for public reg

setup deploy part


- do the same for private repo and private reg

- then apply tekton triggers for build and deploy on push

- explore tekton dashboard



10)

create cd part using argocd

11)

install promethues and grafana as argocd cd setup


12)

install elk stack as argocd setup

13)

install signoz as argocd setup

14)

try istio ambeint mesh mode 


15)

install keycloak

16)

use keycloack provider terraform

17)

